
main:     file format elf64-x86-64


Disassembly of section .my_section:

0000000000602040 <buff>:
	...

Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	insb   (%dx),%es:(%rdi)
 352:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 359:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 35e:	78 2d                	js     38d <_init-0xc73>
 360:	78 38                	js     39a <_init-0xc66>
 362:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 368:	6f                   	outsl  %ds:(%rsi),(%dx)
 369:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    $0x0,%al
 372:	00 00                	add    %al,(%rax)
 374:	10 00                	adc    %al,(%rax)
 376:	00 00                	add    %al,(%rax)
 378:	05 00 00 00 47       	add    $0x47000000,%eax
 37d:	4e 55                	rex.WRX push %rbp
 37f:	00 02                	add    %al,(%rdx)
 381:	00 00                	add    %al,(%rax)
 383:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 387:	00 03                	add    %al,(%rbx)
 389:	00 00                	add    %al,(%rax)
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    $0x0,%al
 392:	00 00                	add    %al,(%rax)
 394:	14 00                	adc    $0x0,%al
 396:	00 00                	add    %al,(%rax)
 398:	03 00                	add    (%rax),%eax
 39a:	00 00                	add    %al,(%rax)
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push %rbp
 39f:	00 59 3a             	add    %bl,0x3a(%rcx)
 3a2:	cc                   	int3   
 3a3:	ca f3 45             	lret   $0x45f3
 3a6:	fd                   	std    
 3a7:	5f                   	pop    %rdi
 3a8:	c9                   	leaveq 
 3a9:	35 38 4a 7b c2       	xor    $0xc27b4a38,%eax
 3ae:	72 90                	jb     340 <_init-0xcc0>
 3b0:	cc                   	int3   
 3b1:	09 2e                	or     %ebp,(%rsi)
 3b3:	02                   	.byte 0x2

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    $0x0,%al
 3b6:	00 00                	add    %al,(%rax)
 3b8:	10 00                	adc    %al,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	01 00                	add    %eax,(%rax)
 3be:	00 00                	add    %al,(%rax)
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push %rbp
 3c3:	00 00                	add    %al,(%rax)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 03                	add    %al,(%rbx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 02                	add    %al,(%rdx)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 00                	add    %al,(%rax)
 3d1:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	02 00                	add    (%rax),%al
 3da:	00 00                	add    %al,(%rax)
 3dc:	06                   	(bad)  
 3dd:	00 00                	add    %al,(%rax)
 3df:	00 01                	add    %al,(%rcx)
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 06                	add    %al,(%rsi)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 00                	add    %al,(%rax)
 3e9:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3ef:	00 06                	add    %al,(%rsi)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 00                	add    %al,(%rax)
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 d1                	add    %dl,%cl
 3f9:	65 ce                	gs (bad) 
 3fb:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000400 <.dynsym>:
	...
 418:	3f                   	(bad)  
 419:	00 00                	add    %al,(%rax)
 41b:	00 20                	add    %ah,(%rax)
	...
 42d:	00 00                	add    %al,(%rax)
 42f:	00 0b                	add    %cl,(%rbx)
 431:	00 00                	add    %al,(%rax)
 433:	00 12                	add    %dl,(%rdx)
	...
 445:	00 00                	add    %al,(%rax)
 447:	00 21                	add    %ah,(%rcx)
 449:	00 00                	add    %al,(%rax)
 44b:	00 12                	add    %dl,(%rdx)
	...
 45d:	00 00                	add    %al,(%rax)
 45f:	00 5b 00             	add    %bl,0x0(%rbx)
 462:	00 00                	add    %al,(%rax)
 464:	20 00                	and    %al,(%rax)
	...
 476:	00 00                	add    %al,(%rax)
 478:	6a 00                	pushq  $0x0
 47a:	00 00                	add    %al,(%rax)
 47c:	20 00                	and    %al,(%rax)
	...
 48e:	00 00                	add    %al,(%rax)
 490:	12 00                	adc    (%rax),%al
 492:	00 00                	add    %al,(%rax)
 494:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

00000000000004a8 <.dynstr>:
 4a8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4ac:	63 2e                	movslq (%rsi),%ebp
 4ae:	73 6f                	jae    51f <_init-0xae1>
 4b0:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 4b5:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 4bc:	63 78 61             	movslq 0x61(%rax),%edi
 4bf:	5f                   	pop    %rdi
 4c0:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4c6:	7a 65                	jp     52d <_init-0xad3>
 4c8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4cb:	6c                   	insb   (%dx),%es:(%rdi)
 4cc:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4d3:	72 74                	jb     549 <_init-0xab7>
 4d5:	5f                   	pop    %rdi
 4d6:	6d                   	insl   (%dx),%es:(%rdi)
 4d7:	61                   	(bad)  
 4d8:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 4df:	43 5f                	rex.XB pop %r15
 4e1:	32 2e                	xor    (%rsi),%ch
 4e3:	32 2e                	xor    (%rsi),%ch
 4e5:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 4ea:	4d 5f                	rex.WRB pop %r15
 4ec:	64 65 72 65          	fs gs jb 555 <_init-0xaab>
 4f0:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4f7:	4d 
 4f8:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4fa:	6f                   	outsl  %ds:(%rsi),(%dx)
 4fb:	6e                   	outsb  %ds:(%rsi),(%dx)
 4fc:	65 54                	gs push %rsp
 4fe:	61                   	(bad)  
 4ff:	62                   	(bad)  
 500:	6c                   	insb   (%dx),%es:(%rdi)
 501:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 505:	67 6d                	insl   (%dx),%es:(%edi)
 507:	6f                   	outsl  %ds:(%rsi),(%dx)
 508:	6e                   	outsb  %ds:(%rsi),(%dx)
 509:	5f                   	pop    %rdi
 50a:	73 74                	jae    580 <_init-0xa80>
 50c:	61                   	(bad)  
 50d:	72 74                	jb     583 <_init-0xa7d>
 50f:	5f                   	pop    %rdi
 510:	5f                   	pop    %rdi
 511:	00 5f 49             	add    %bl,0x49(%rdi)
 514:	54                   	push   %rsp
 515:	4d 5f                	rex.WRB pop %r15
 517:	72 65                	jb     57e <_init-0xa82>
 519:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 520:	4d 
 521:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 523:	6f                   	outsl  %ds:(%rsi),(%dx)
 524:	6e                   	outsb  %ds:(%rsi),(%dx)
 525:	65 54                	gs push %rsp
 527:	61                   	(bad)  
 528:	62                   	.byte 0x62
 529:	6c                   	insb   (%dx),%es:(%rdi)
 52a:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000052c <.gnu.version>:
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	02 00                	add    (%rax),%al
 532:	02 00                	add    (%rax),%al
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000540 <.gnu.version_r>:
 540:	01 00                	add    %eax,(%rax)
 542:	01 00                	add    %eax,(%rax)
 544:	01 00                	add    %eax,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	10 00                	adc    %al,(%rax)
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	75 1a                	jne    56c <_init-0xa94>
 552:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 558:	33 00                	xor    (%rax),%eax
 55a:	00 00                	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000560 <.rela.dyn>:
 560:	b8 3d 00 00 00       	mov    $0x3d,%eax
 565:	00 00                	add    %al,(%rax)
 567:	00 08                	add    %cl,(%rax)
 569:	00 00                	add    %al,(%rax)
 56b:	00 00                	add    %al,(%rax)
 56d:	00 00                	add    %al,(%rax)
 56f:	00 40 11             	add    %al,0x11(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 57f <_init-0xa81>
 57f:	00 08                	add    %cl,(%rax)
	...
 589:	11 00                	adc    %eax,(%rax)
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 08                	add    %cl,(%rax)
 591:	40 00 00             	add    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	08 00                	or     %al,(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	08 40 00             	or     %al,0x0(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 d8                	add    %bl,%al
 5a9:	3f                   	(bad)  
 5aa:	00 00                	add    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	06                   	(bad)  
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 01                	add    %al,(%rcx)
	...
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 e0                	add    %ah,%al
 5c1:	3f                   	(bad)  
 5c2:	00 00                	add    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	06                   	(bad)  
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 03                	add    %al,(%rbx)
	...
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 e8                	add    %ch,%al
 5d9:	3f                   	(bad)  
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	06                   	(bad)  
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5ee:	00 00                	add    %al,(%rax)
 5f0:	f0 3f                	lock (bad) 
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	06                   	(bad)  
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 601 <_init-0x9ff>
 601:	00 00                	add    %al,(%rax)
 603:	00 00                	add    %al,(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 f8                	add    %bh,%al
 609:	3f                   	(bad)  
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	06                   	(bad)  
 611:	00 00                	add    %al,(%rax)
 613:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

0000000000000620 <.rela.plt>:
 620:	d0 3f                	sarb   (%rdi)
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	07                   	(bad)  
 629:	00 00                	add    %al,(%rax)
 62b:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <printf@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 96 01 00 00 	lea    0x196(%rip),%r8        # 1210 <__libc_csu_fini>
    107a:	48 8d 0d 1f 01 00 00 	lea    0x11f(%rip),%rcx        # 11a0 <__libc_csu_init>
    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 b8 48 65 6c 6c 6f 	movabs $0x77202c6f6c6c6548,%rax
    1158:	2c 20 77 
    115b:	48 89 05 de 0e 60 00 	mov    %rax,0x600ede(%rip)        # 602040 <buff>
    1162:	c7 05 dc 0e 60 00 6f 	movl   $0x646c726f,0x600edc(%rip)        # 602048 <buff+0x8>
    1169:	72 6c 64 
    116c:	66 c7 05 d7 0e 60 00 	movw   $0xa21,0x600ed7(%rip)        # 60204c <buff+0xc>
    1173:	21 0a 
    1175:	c6 05 d2 0e 60 00 00 	movb   $0x0,0x600ed2(%rip)        # 60204e <buff+0xe>
    117c:	48 8d 35 bd 0e 60 00 	lea    0x600ebd(%rip),%rsi        # 602040 <buff>
    1183:	48 8d 3d 7a 0e 00 00 	lea    0xe7a(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    118a:	b8 00 00 00 00       	mov    $0x0,%eax
    118f:	e8 bc fe ff ff       	callq  1050 <printf@plt>
    1194:	b8 00 00 00 00       	mov    $0x0,%eax
    1199:	5d                   	pop    %rbp
    119a:	c3                   	retq   
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <__libc_csu_init>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	41 57                	push   %r15
    11a6:	4c 8d 3d 0b 2c 00 00 	lea    0x2c0b(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    11ad:	41 56                	push   %r14
    11af:	49 89 d6             	mov    %rdx,%r14
    11b2:	41 55                	push   %r13
    11b4:	49 89 f5             	mov    %rsi,%r13
    11b7:	41 54                	push   %r12
    11b9:	41 89 fc             	mov    %edi,%r12d
    11bc:	55                   	push   %rbp
    11bd:	48 8d 2d fc 2b 00 00 	lea    0x2bfc(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    11c4:	53                   	push   %rbx
    11c5:	4c 29 fd             	sub    %r15,%rbp
    11c8:	48 83 ec 08          	sub    $0x8,%rsp
    11cc:	e8 2f fe ff ff       	callq  1000 <_init>
    11d1:	48 c1 fd 03          	sar    $0x3,%rbp
    11d5:	74 1f                	je     11f6 <__libc_csu_init+0x56>
    11d7:	31 db                	xor    %ebx,%ebx
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11e0:	4c 89 f2             	mov    %r14,%rdx
    11e3:	4c 89 ee             	mov    %r13,%rsi
    11e6:	44 89 e7             	mov    %r12d,%edi
    11e9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11ed:	48 83 c3 01          	add    $0x1,%rbx
    11f1:	48 39 dd             	cmp    %rbx,%rbp
    11f4:	75 ea                	jne    11e0 <__libc_csu_init+0x40>
    11f6:	48 83 c4 08          	add    $0x8,%rsp
    11fa:	5b                   	pop    %rbx
    11fb:	5d                   	pop    %rbp
    11fc:	41 5c                	pop    %r12
    11fe:	41 5d                	pop    %r13
    1200:	41 5e                	pop    %r14
    1202:	41 5f                	pop    %r15
    1204:	c3                   	retq   
    1205:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    120c:	00 00 00 00 

0000000000001210 <__libc_csu_fini>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	c3                   	retq   

Disassembly of section .fini:

0000000000001218 <_fini>:
    1218:	f3 0f 1e fa          	endbr64 
    121c:	48 83 ec 08          	sub    $0x8,%rsp
    1220:	48 83 c4 08          	add    $0x8,%rsp
    1224:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	25                   	.byte 0x25
    2005:	73 00                	jae    2007 <_IO_stdin_used+0x7>

Disassembly of section .eh_frame_hdr:

0000000000002008 <__GNU_EH_FRAME_HDR>:
    2008:	01 1b                	add    %ebx,(%rbx)
    200a:	03 3b                	add    (%rbx),%edi
    200c:	44 00 00             	add    %r8b,(%rax)
    200f:	00 07                	add    %al,(%rdi)
    2011:	00 00                	add    %al,(%rax)
    2013:	00 18                	add    %bl,(%rax)
    2015:	f0 ff                	lock (bad) 
    2017:	ff                   	(bad)  
    2018:	78 00                	js     201a <__GNU_EH_FRAME_HDR+0x12>
    201a:	00 00                	add    %al,(%rax)
    201c:	38 f0                	cmp    %dh,%al
    201e:	ff                   	(bad)  
    201f:	ff a0 00 00 00 48    	jmpq   *0x48000000(%rax)
    2025:	f0 ff                	lock (bad) 
    2027:	ff                   	(bad)  
    2028:	b8 00 00 00 58       	mov    $0x58000000,%eax
    202d:	f0 ff                	lock (bad) 
    202f:	ff 60 00             	jmpq   *0x0(%rax)
    2032:	00 00                	add    %al,(%rax)
    2034:	41 f1                	rex.B icebp 
    2036:	ff                   	(bad)  
    2037:	ff d0                	callq  *%rax
    2039:	00 00                	add    %al,(%rax)
    203b:	00 98 f1 ff ff f0    	add    %bl,-0xf00000f(%rax)
    2041:	00 00                	add    %al,(%rax)
    2043:	00 08                	add    %cl,(%rax)
    2045:	f2 ff                	repnz (bad) 
    2047:	ff                   	(bad)  
    2048:	38 01                	cmp    %al,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000002050 <__FRAME_END__-0x104>:
    2050:	14 00                	adc    $0x0,%al
    2052:	00 00                	add    %al,(%rax)
    2054:	00 00                	add    %al,(%rax)
    2056:	00 00                	add    %al,(%rax)
    2058:	01 7a 52             	add    %edi,0x52(%rdx)
    205b:	00 01                	add    %al,(%rcx)
    205d:	78 10                	js     206f <__GNU_EH_FRAME_HDR+0x67>
    205f:	01 1b                	add    %ebx,(%rbx)
    2061:	0c 07                	or     $0x7,%al
    2063:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2069:	00 00                	add    %al,(%rax)
    206b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    206e:	00 00                	add    %al,(%rax)
    2070:	f0 ef                	lock out %eax,(%dx)
    2072:	ff                   	(bad)  
    2073:	ff 2f                	ljmp   *(%rdi)
    2075:	00 00                	add    %al,(%rax)
    2077:	00 00                	add    %al,(%rax)
    2079:	44 07                	rex.R (bad) 
    207b:	10 00                	adc    %al,(%rax)
    207d:	00 00                	add    %al,(%rax)
    207f:	00 24 00             	add    %ah,(%rax,%rax,1)
    2082:	00 00                	add    %al,(%rax)
    2084:	34 00                	xor    $0x0,%al
    2086:	00 00                	add    %al,(%rax)
    2088:	98                   	cwtl   
    2089:	ef                   	out    %eax,(%dx)
    208a:	ff                   	(bad)  
    208b:	ff 20                	jmpq   *(%rax)
    208d:	00 00                	add    %al,(%rax)
    208f:	00 00                	add    %al,(%rax)
    2091:	0e                   	(bad)  
    2092:	10 46 0e             	adc    %al,0xe(%rsi)
    2095:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2098:	0b 77 08             	or     0x8(%rdi),%esi
    209b:	80 00 3f             	addb   $0x3f,(%rax)
    209e:	1a 3a                	sbb    (%rdx),%bh
    20a0:	2a 33                	sub    (%rbx),%dh
    20a2:	24 22                	and    $0x22,%al
    20a4:	00 00                	add    %al,(%rax)
    20a6:	00 00                	add    %al,(%rax)
    20a8:	14 00                	adc    $0x0,%al
    20aa:	00 00                	add    %al,(%rax)
    20ac:	5c                   	pop    %rsp
    20ad:	00 00                	add    %al,(%rax)
    20af:	00 90 ef ff ff 10    	add    %dl,0x10ffffef(%rax)
	...
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 14 00             	add    %dl,(%rax,%rax,1)
    20c2:	00 00                	add    %al,(%rax)
    20c4:	74 00                	je     20c6 <__GNU_EH_FRAME_HDR+0xbe>
    20c6:	00 00                	add    %al,(%rax)
    20c8:	88 ef                	mov    %ch,%bh
    20ca:	ff                   	(bad)  
    20cb:	ff 10                	callq  *(%rax)
	...
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20da:	00 00                	add    %al,(%rax)
    20dc:	8c 00                	mov    %es,(%rax)
    20de:	00 00                	add    %al,(%rax)
    20e0:	69 f0 ff ff 52 00    	imul   $0x52ffff,%eax,%esi
    20e6:	00 00                	add    %al,(%rax)
    20e8:	00 45 0e             	add    %al,0xe(%rbp)
    20eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    20f1:	02 49 0c             	add    0xc(%rcx),%cl
    20f4:	07                   	(bad)  
    20f5:	08 00                	or     %al,(%rax)
    20f7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    20fb:	00 ac 00 00 00 a0 f0 	add    %ch,-0xf600000(%rax,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff 65 00             	jmpq   *0x0(%rbp)
    2106:	00 00                	add    %al,(%rax)
    2108:	00 46 0e             	add    %al,0xe(%rsi)
    210b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2111:	8e 03                	mov    (%rbx),%es
    2113:	45 0e                	rex.RB (bad) 
    2115:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    211b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302f65 <buff+0xffffffff85d00f25>
    2121:	06                   	(bad)  
    2122:	48 0e                	rex.W (bad) 
    2124:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    212a:	6e                   	outsb  %ds:(%rsi),(%dx)
    212b:	0e                   	(bad)  
    212c:	38 41 0e             	cmp    %al,0xe(%rcx)
    212f:	30 41 0e             	xor    %al,0xe(%rcx)
    2132:	28 42 0e             	sub    %al,0xe(%rdx)
    2135:	20 42 0e             	and    %al,0xe(%rdx)
    2138:	18 42 0e             	sbb    %al,0xe(%rdx)
    213b:	10 42 0e             	adc    %al,0xe(%rdx)
    213e:	08 00                	or     %al,(%rax)
    2140:	10 00                	adc    %al,(%rax)
    2142:	00 00                	add    %al,(%rax)
    2144:	f4                   	hlt    
    2145:	00 00                	add    %al,(%rax)
    2147:	00 c8                	add    %cl,%al
    2149:	f0 ff                	lock (bad) 
    214b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2151 <__GNU_EH_FRAME_HDR+0x149>
    2151:	00 00                	add    %al,(%rax)
	...

0000000000002154 <__FRAME_END__>:
    2154:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003db8 <__frame_dummy_init_array_entry>:
    3db8:	40 11 00             	rex adc %eax,(%rax)
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003dc0 <__do_global_dtors_aux_fini_array_entry>:
    3dc0:	00 11                	add    %dl,(%rcx)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003dc8 <_DYNAMIC>:
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	01 00                	add    %eax,(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	0c 00                	or     $0x0,%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	00 10                	add    %dl,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	0d 00 00 00 00       	or     $0x0,%eax
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 18                	add    %bl,(%rax)
    3df1:	12 00                	adc    (%rax),%al
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 19                	add    %bl,(%rcx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 1b                	add    %bl,(%rbx)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 08                	add    %cl,(%rax)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 1a                	add    %bl,(%rdx)
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c0                	add    %al,%al
    3e21:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	1c 00                	sbb    $0x0,%al
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	08 00                	or     %al,(%rax)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	f5                   	cmc    
    3e39:	fe                   	(bad)  
    3e3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 d8                	add    %bl,%al
    3e41:	03 00                	add    (%rax),%eax
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e4d <_DYNAMIC+0x85>
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 a8 04 00 00 00    	add    %ch,0x4(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 06                	add    %al,(%rsi)
	...
    3e61:	04 00                	add    $0x0,%al
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 0a                	add    %cl,(%rdx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 84 00 00 00 00 00 	add    %al,0x0(%rax,%rax,1)
    3e76:	00 00                	add    %al,(%rax)
    3e78:	0b 00                	or     (%rax),%eax
    3e7a:	00 00                	add    %al,(%rax)
    3e7c:	00 00                	add    %al,(%rax)
    3e7e:	00 00                	add    %al,(%rax)
    3e80:	18 00                	sbb    %al,(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 03                	add    %al,(%rbx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 02                	add    %al,(%rdx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)  
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 17                	add    %dl,(%rdi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 20                	add    %ah,(%rax)
    3ed1:	06                   	(bad)  
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	07                   	(bad)  
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 60 05             	add    %ah,0x5(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	08 00                	or     %al,(%rax)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	c0 00 00             	rolb   $0x0,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 09                	add    %cl,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 18                	add    %bl,(%rax)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 1e                	add    %bl,(%rsi)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 08                	add    %cl,(%rax)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 fb                	add    %bh,%bl
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 01                	add    %al,(%rcx)
    3f21:	00 00                	add    %al,(%rax)
    3f23:	08 00                	or     %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 fe                	add    %bh,%dh
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 40 05             	add    %al,0x5(%rax)
    3f32:	00 00                	add    %al,(%rax)
    3f34:	00 00                	add    %al,(%rax)
    3f36:	00 00                	add    %al,(%rax)
    3f38:	ff                   	(bad)  
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 01                	add    %al,(%rcx)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	00 00                	add    %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 f0                	add    %dh,%al
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 2c 05 00 00 00 00 	add    %ch,0x0(,%rax,1)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	f9                   	stc    
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb8 <_GLOBAL_OFFSET_TABLE_>:
    3fb8:	c8 3d 00 00          	enterq $0x3d,$0x0
	...
    3fd0:	30 10                	xor    %dl,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <buff+0x62151708>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
